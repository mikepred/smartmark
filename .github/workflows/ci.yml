name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      run: npm test

    - name: Run test coverage
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  e2e-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npm run test:e2e

    - name: Upload Playwright test results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-results
        path: test-results/

  extension-validation:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate manifest.json
      run: |
        node -e "
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf8'));
          console.log('Manifest validation passed');
          console.log('Extension name:', manifest.name);
          console.log('Version:', manifest.version);
          console.log('Manifest version:', manifest.manifest_version);
          if (manifest.manifest_version !== 3) {
            throw new Error('Manifest version must be 3');
          }
        "

    - name: Check required files
      run: |
        test -f manifest.json || exit 1
        test -f background.js || exit 1
        test -f content.js || exit 1
        test -f popup.html || exit 1
        test -f popup.js || exit 1
        test -f settings.html || exit 1
        test -f settings.js || exit 1
        test -d icons || exit 1
        test -d utils || exit 1
        echo "All required files present"

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for sensitive data
      run: |
        # Check for potential API keys or secrets in code
        if grep -r "api.*key\|secret\|password" --include="*.js" --include="*.json" --exclude-dir=node_modules .; then
          echo "Warning: Potential sensitive data found in code"
          exit 1
        fi
        echo "No obvious sensitive data found"
